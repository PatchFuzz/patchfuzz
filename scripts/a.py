import openai
import pandas as pd
import os
import re
import time

os.environ["HTTP_PROXY"] = "http://127.0.0.1:10080"
os.environ["HTTPS_PROXY"] = "http://127.0.0.1:10080"

with open("sk1.txt", "r") as f:
    sk = f.read()
openai.api_key = sk
#tell me the error reporting information when you run the wrong code without any other words
#Please fix the wrong code to code that works correctly and show the whole correct code to me without any other words
#Please modify the wrong code to code that works correctly and show it to me with the modification method

    #prompt = "I want you to act as a classifier. I will give you a piece of text generated by command \"git log -m --name-status\". You need to identify the git commit log and determine if it is fixing a bug. If it is, you should answer \"yes\", if not you should answer \"no\",nothing else.tell me where it went wrong ,then and add \"######JavaScript\\n\" before and after the whole code, "

def isBugFix(question):
    # prompt = "I want you to act as a parser for JavaScript engines. I will give you a piece of JavaScript code. You need to determine if it works correctly. If it doesn't works correctly, you should fix the wrong code to code that works correctly in any other browser and show the whole correct code to me without any other words. "
    prompt = "I want you to act as a parser for JavaScript engines. I will give you a piece of JavaScript code. You need to determine if it works correctly. If it works correctly, you just need to answer \"yes\", if not you should answer \"//no\". " \
             "Then you anwser \"//Error reporting information:\\n\" and tell me the error reporting information when you run the wrong code without any other words and add \"//\" before each sentence. " \
             "Then you anwser \"//Fixed code:\\n\" and fix the wrong code to code that works correctly in any other browser and show the whole correct code to me without any other words. " \
             "Then you anwser \"//Modification method:\\n\" and tell me the modification method when you fixed the wrong code and add \"//\" before each sentence."

    rsp = openai.ChatCompletion.create(
    model="gpt-3.5-turbo",
    messages=[
            {"role": "system", "content": prompt},
            {"role": "user", "content": question}
        ]
    )
    resmessage = rsp['choices'][0]['message']['content']
    return resmessage

target = input("Engine name：")
path = os.path.join(r"C:\Users\Myh\Desktop\badpoc\badbad",target)
pathnew = os.path.join(r"C:\Users\Myh\Desktop\badpoc\chat",target)
path1 = r"C:\Users\Myh\Desktop\badpoc\badbad\jsc\test.js"
# with open(path1, "r") as f:
#     data = f.read()
#     print("testing....")
#     anw = isBugFix(data)
#     print(anw)
#     input()
def rewrite(fullname2):
    with open(fullname2, "r", encoding="utf-8") as f1:
        lines = f1.readlines()
    with open(fullname2, "w", encoding="utf-8") as fw1:
        mark = False
        for line in lines:
            # m = re.findall(r"Modification method:\w*", line)
            if "Error reporting information:" in line:
                fw1.write(line)
                mark = True
            elif "Fixed code:" in line:
                fw1.write(line)
                mark = False
            elif "Modification method" in line:
                fw1.write(line)
                mark = True
            elif mark:
                if "//" not in line:
                    line = "//" + line
                fw1.write(line)
            else:
                fw1.write(line)
def run(num):
    for main_dir, sub_dir_list, sub_file_list in os.walk(path):
        for filename in sub_file_list:
            print(filename, sub_file_list.index(filename),"/", len(sub_file_list))
            if sub_file_list.index(filename) < int(num):
                continue
            fullname = os.path.join(main_dir, filename)
            fullname2 = os.path.join(pathnew, filename)

            with open(fullname,"r",encoding="utf-8") as f:
                data = f.read()
                # print(data)
                try:
                    anw = isBugFix(data)
                except Exception as e:
                    print("=======")
                    print(e.args)
                    print("=======")
                    anw = "//" + str(e.args)
                print(anw)
            if sub_file_list.index(filename) == int(num) :
                a = input("判断输出是否合适：yes/no")
                if a == "no" :
                    os._exit()
            with open(fullname2, "w",encoding="utf-8") as fw:
                fw.write(anw)
            rewrite(fullname2)


        # input()
num = input("Start Number：")
run(num)